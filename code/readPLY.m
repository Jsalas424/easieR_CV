function [V,F] = readPLY(filename)
% READPLY - Import binary little-endian PLY and visualize mesh + wireframe.
% PLY files generated by pymeshlab >=2025
%
% Inputs:
%   filename - path to binary little-endian PLY (like mesh_remeshed.ply)
%
% Outputs:
%   V - n x 3 vertex coordinates
%   F - m x 3 face indices (MATLAB 1-based)
%
% Also displays a figure with solid mesh and wireframe overlay.

fid = fopen(filename,'r');
if fid == -1, error('Cannot open file: %s', filename); end

%% --- Read header ---
num_vertices = 0; num_faces = 0;
format_binary = false;

while true
    tline = fgetl(fid);
    if tline == -1, error('Unexpected EOF while reading header'); end
    
    if contains(tline,'format binary_little_endian')
        format_binary = true;
    elseif startsWith(tline,'element vertex')
        nums = sscanf(tline,'element vertex %d');
        if ~isempty(nums), num_vertices = nums(1); end
    elseif startsWith(tline,'element face')
        nums = sscanf(tline,'element face %d');
        if ~isempty(nums), num_faces = nums(1); end
    elseif contains(tline,'end_header')
        break;
    end
end

if ~format_binary
    error('This reader only supports binary little-endian PLY files.');
end

%% --- Read vertices ---
V = zeros(num_vertices,3);
for i = 1:num_vertices
    V(i,1) = fread(fid,1,'double');
    V(i,2) = fread(fid,1,'double');
    V(i,3) = fread(fid,1,'double');
    fread(fid,3,'uint8');  % skip r,g,b
    fread(fid,1,'uint8');  % skip alpha
    fread(fid,1,'double'); % skip quality
end

%% --- Read faces ---
F = zeros(num_faces,3,'int32');
for i = 1:num_faces
    nverts = fread(fid,1,'uint8');
    if nverts ~= 3
        error('Only triangular faces supported (face %d has %d vertices)', i, nverts);
    end
    F(i,:) = fread(fid,3,'int32')';
end

fclose(fid);

% --- Convert to MATLAB 1-based indexing ---
F = F + 1;

%% --- Visualization ---
figure('Name',sprintf('PLY Visualization: %s',filename),'Position',[100,100,900,700]);

% Solid mesh with light color
trisurf(F, V(:,1), V(:,2), V(:,3), ...
        'FaceColor', [0.7 0.8 0.9], ...
        'EdgeColor', 'none', ...
        'FaceAlpha', 0.95);
hold on;

% Wireframe overlay
edges = [F(:,[1 2]); F(:,[2 3]); F(:,[3 1])];
edges = unique(sort(edges,2),'rows');  % undirected unique edges

for e = 1:size(edges,1)
    plot3(V(edges(e,:),1), V(edges(e,:),2), V(edges(e,:),3), ...
          'k-', 'LineWidth', 0.5);
end

axis equal; axis tight; grid on;
xlabel('X'); ylabel('Y'); zlabel('Z');
title(sprintf('Mesh + Wireframe: %s', filename),'Interpreter','none');
view(3);
camlight('headlight');
lighting gouraud;

end
